name: Release

on:
  push:
    tags: ["[0-9]+.[0-9]+.[0-9]+*"]
    branches: ['release-test']
jobs:
  build-unity:
    runs-on: ubuntu-latest
    env:
      UNITY_LICENSE_FILE: ./tmp/ulf
      UNITY_BIN: /opt/Unity/Editor/Unity
    container:
      image: gableroux/unity3d:2019.4.14f1-linux-il2cpp
    steps:
    - uses: actions/checkout@v2
    - name: Decode Unity License File
      run: |
        mkdir ./tmp
        echo -n $UNITY_LICENSE_2019_BASE64 | base64 --decode > $UNITY_LICENSE_FILE
    - run: $UNITY_BIN -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile $UNITY_LICENSE_FILE || exit 0

    # set release tag(*.*.*) to env.GIT_TAG
    - run: echo "name=GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    # Execute scripts: Export Package
    - name: Export unitypackage
      run: $UNITY_BIN -batchmode -nographics -logFile -exportPackage Assets/VContainer/Runtime Assets/VContainer/Editor VContainer.${{ env.GIT_TAG }}.unitypackage -projectPath ./VContainer
      working-directory: VContainer

    # Store artifacts.
    - uses: actions/upload-artifact@v2
      with:
        name: VContainer.${{ env.GIT_TAG }}.unitypackage
        path: ./VContainer/VContainer.${{ env.GIT_TAG }}.unitypackage

  create-release:
    needs: [build-unity]
    runs-on: ubuntu-latest
    steps:
    - run: echo "name=GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV      

    # Create Releases
    - uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Ver.${{ github.ref }}

    # Download(All) Artifacts to current directory
    - uses: actions/download-artifact@v2-preview

    # Upload to Releases(unitypackage)
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./VContainer.${{ env.GIT_TAG }}.unitypackage/UniTask.${{ env.GIT_TAG }}.unitypackage
        asset_name: VContainer.${{ env.GIT_TAG }}.unitypackage
        asset_content_type: application/octet-stream
